name: Deploy CF with cflinuxfs5
description: Deploy Cloud Foundry to a bbl environment using the cflinuxfs5 stack
inputs:
  env_name:
    description: bbl environment name (state dir under the bbl-state repo)
    required: true
  stack:
    description: cflinux stack to be used for deployment
    required: true
  version:
    description: cflinuxfs5 version (e.g., 1.0.0-rc.1)
    required: true
  bbl_state_repo:
    description: Repo holding bbl state (owner/repo)
    required: true
  bbl_state_branch:
    description: Branch of the bbl state repo
    required: true
    default: main
  system_domain:
    description: Overrides default "<env_name>.buildpacks-gcp.ci.cf-app.com"
    required: false
    default: "sisle.org"
outputs:
  success:
    description: true if deploy completed successfully
    value: ${{ steps.done.outputs.success }}
runs:
  using: composite
  steps:

    - name: Checkout bbl state repo
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.bbl_state_repo }}
        ref: ${{ inputs.bbl_state_branch }}
        ssh-key: ${{ env.BBL_STATE_DEPLOY_KEY }}
        path: bbl-state

    - name: Checkout cf-deployment
      uses: actions/checkout@v4
      with:
        repository: cloudfoundry/cf-deployment
        ref: main
        path: cf-deployment

    - name: Checkout test ops file repo
      uses: actions/checkout@v4
      with:
        repository: Ivo1116/test
        ref: main
        path: test

    - name: Setup tools (bosh, bbl)
      shell: bash
      run: |
        set -euo pipefail
        wget -O /tmp/bbl https://github.com/cloudfoundry/bosh-bootloader/releases/download/v9.0.36/bbl-v9.0.36_linux_amd64
        chmod +x /tmp/bbl
        sudo mv /tmp/bbl /usr/local/bin/bbl

        wget -O /tmp/bosh https://github.com/cloudfoundry/bosh-cli/releases/download/v7.4.0/bosh-cli-7.4.0-linux-amd64
        chmod +x /tmp/bosh
        sudo mv /tmp/bosh /usr/local/bin/bosh

    - name: Download release from S3
      uses: ./.github/actions/download-s3
      with:
        stack: ${{ inputs.stack }}
        version: ${{ inputs.version }}
        bucket-name: cflinuxfs5test
        artifact-type: release

    - name: Upload Noble stemcell
      shell: bash
      run: |
        set -euo pipefail
        BBL_STATE_DIR="bbl-state/${{ inputs.env_name }}"
        eval "$(bbl print-env --state-dir $BBL_STATE_DIR)"
        bosh  upload-stemcell https://bosh.io/d/stemcells/bosh-google-kvm-ubuntu-noble?v=1.25

    - name: Upload cflinuxfs5 release
      shell: bash
      run: |
        set -euo pipefail
        STACK="${{ inputs.stack }}" 
        VERSION="${{ inputs.version }}"
        BBL_STATE_DIR="bbl-state/${{ inputs.env_name }}"
        eval "$(bbl print-env --state-dir $BBL_STATE_DIR)"
        bosh  upload-release rootfs-artifacts/${STACK}-release-${VERSION}.tgz

    - name: Deploy CF with cflinuxfs5
      shell: bash
      run: |
        set -euo pipefail
        BBL_STATE_DIR="bbl-state/${{ inputs.env_name }}"
        DOMAIN="${{ inputs.system_domain}}" 
        eval "$(bbl print-env --state-dir $BBL_STATE_DIR)"
        bosh -n -d cf deploy cf-deployment/cf-deployment.yml \
          -o cf-deployment/operations/experimental/use-noble-stemcell.yml \
          -o cf-deployment/operations/use-postgres.yml \
          -o test/use-cflinuxfs5.yml \
          -v system_domain=${DOMAIN}

        echo "success=true" >> "$GITHUB_OUTPUT"
