name: 'BBL Up'
description: 'Set up test environment using BBL (GCP)'

inputs:
  stack:
    description: 'Stack name'
    required: true
  version:
    description: 'Version number'
    required: true
  env_name:
    description: 'Environment name'
    required: false
    default: 'cflinuxfs5-test'
  gcp_project_id:
    description: 'GCP Project ID'
    required: true
  gcp_zone:
    description: 'GCP Zone'
    required: false
    default: 'us-east1-c'
  gcp_region:
    description: 'GCP Region'
    required: false
    default: 'us-east1'
  lb_domain:
    description: 'Load balancer domain'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout cf-deployment-concourse-tasks
      uses: actions/checkout@v4
      with:
        repository: cloudfoundry/cf-deployment-concourse-tasks
        ref: main
        path: cf-deployment-concourse-tasks

    - name: Checkout bosh-deployment
      uses: actions/checkout@v4
      with:
        repository: cloudfoundry/bosh-deployment
        ref: master
        path: bosh-deployment

    - name: Checkout BBL state repo
      uses: actions/checkout@v4
      with:
        repository: ivo1116/buildpacks-envs
        ref: main
        path: bbl-state
        ssh-key: CFLINUXFS5_TOKEN


    - name: Install BBL, Terraform, BOSH CLI
      shell: bash
      run: |
        set -euo pipefail
        wget -O /tmp/bbl https://github.com/cloudfoundry/bosh-bootloader/releases/download/v8.4.110/bbl-v8.4.110_linux_x86-64
        chmod +x /tmp/bbl
        sudo mv /tmp/bbl /usr/local/bin/bbl

        wget -O /tmp/terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
        unzip /tmp/terraform.zip -d /tmp/
        sudo mv /tmp/terraform /usr/local/bin/terraform

        wget -O /tmp/bosh https://github.com/cloudfoundry/bosh-cli/releases/download/v7.4.0/bosh-cli-7.4.0-linux-amd64
        chmod +x /tmp/bosh
        sudo mv /tmp/bosh /usr/local/bin/bosh

    - name: Run BBL Up
      id: bbl-up
      shell: bash
      env:
        GCP_SERVICE_ACCOUNT_KEY: ${{ env.GCP_SERVICE_ACCOUNT_KEY }}
        CFLINUXFS5_LB_CERT: ${{ env.CFLINUXFS5_LB_CERT }}
        CFLINUXFS5_LB_KEY: ${{ env.CFLINUXFS5_LB_KEY }}
      run: |
        set -euo pipefail

        cd bbl-state/${{ inputs.env_name }} || mkdir -p bbl-state/${{ inputs.env_name }} && cd bbl-state/${{ inputs.env_name }}

        # Write GCP service account key to file
        echo "${GCP_SERVICE_ACCOUNT_KEY}" > gcp-key.json

        export BBL_GCP_SERVICE_ACCOUNT_KEY="$(pwd)/gcp-key.json"
        export BBL_GCP_PROJECT_ID="${{ inputs.gcp_project_id }}"
        export BBL_GCP_ZONE="${{ inputs.gcp_zone }}"
        export BBL_GCP_REGION="${{ inputs.gcp_region }}"
        export BBL_IAAS=gcp

        # Optional: set LB cert/key if provided
        if [[ -n "${CFLINUXFS5_LB_CERT:-}" && -n "${CFLINUXFS5_LB_KEY:-}" ]]; then
          echo "${CFLINUXFS5_LB_CERT}" > lb-cert.pem
          echo "${CFLINUXFS5_LB_KEY}" > lb-key.pem
          export BBL_LB_CERT="$(pwd)/lb-cert.pem"
          export BBL_LB_KEY="$(pwd)/lb-key.pem"
        fi

        # Optional: set LB domain if provided
        if [[ -n "${{ inputs.lb_domain }}" ]]; then
          export LB_DOMAIN="${{ inputs.lb_domain }}"
        fi

        # Run BBL up (idempotent)
        bbl up \
          --iaas gcp \
          --gcp-service-account-key "$BBL_GCP_SERVICE_ACCOUNT_KEY" \
          --gcp-project-id "$BBL_GCP_PROJECT_ID" \
          --gcp-zone "$BBL_GCP_ZONE" \
          --gcp-region "$BBL_GCP_REGION" \
          ${BBL_LB_CERT:+--lb-cert "$BBL_LB_CERT"} \
          ${BBL_LB_KEY:+--lb-key "$BBL_LB_KEY"} \
          ${LB_DOMAIN:+--lb-domain "$LB_DOMAIN"}

        echo "success=true" >> $GITHUB_OUTPUT

    - name: Commit and push BBL state
      shell: bash
      run: |
        set -euo pipefail
        cd bbl-state
        git config user.name "CF Buildpacks Eng Bot"
        git config user.email "tanzu-buildpacks.pdl@broadcom.com"
        if [[ -n "$(git status --porcelain)" ]]; then
          git add -A
          git commit -m "Update BBL state for ${{ inputs.env_name }}"
          git push origin ${{ inputs.bbl_state_branch }}
        else
          echo "No BBL state changes to commit."
        fi

    - name: Output BBL environment info
      shell: bash
      run: |
        cd bbl-state/${{ inputs.env_name }}
        bbl print-env
