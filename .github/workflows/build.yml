name: Build Rootfs

on:
  workflow_dispatch:
    inputs:
      trigger_reason:
        description: 'Reason for triggering build'
        required: false
        default: 'Manual trigger'
  workflow_run:
    workflows: ["CVE Monitoring"]
    types: [completed]
    branches: [main]
  push:
    branches: [main]
    paths:
      - 'cflinuxfs5/**'
      - '!cflinuxfs5/receipt.cflinuxfs5.x86_64'
      - '!cflinuxfs5/README.md'
      - '!cflinuxfs5/.gitignore'
  repository_dispatch:
    types: [golang-update]

jobs:
  # Resource gathering
  gather-resources:
    name: Gather Resources
    runs-on: ubuntu-latest
    outputs:
      previous-version: ${{ steps.previous-release.outputs.tag }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Get previous rootfs release
        id: previous-release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CFLINUXFS5_TOKEN }}
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: 'cloudfoundry',
              repo: 'cflinuxfs5',
              per_page: 1
            });
            const previousTag = releases.length > 0 ? releases[0].tag_name : '';
            core.setOutput('tag', previousTag);

      - name: Generate version
        id: version
        run: |
          # Version generation logic (bump to RC)
          PREVIOUS="${{ steps.previous-release.outputs.tag }}"
          PREVIOUS=${PREVIOUS#v}
          
          if [[ -z "$PREVIOUS" ]]; then
            VERSION="1.0.0-rc.1"
          elif [[ "$PREVIOUS" =~ ^([0-9]+\.[0-9]+\.[0-9]+)-rc\.([0-9]+)$ ]]; then
            BASE_VERSION="${BASH_REMATCH[1]}"
            RC_NUMBER="${BASH_REMATCH[2]}"
            NEW_RC_NUMBER=$((RC_NUMBER + 1))
            VERSION="${BASE_VERSION}-rc.${NEW_RC_NUMBER}"
          elif [[ "$PREVIOUS" =~ ^([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            IFS='.' read -r major minor patch <<< "$PREVIOUS"
            new_patch=$((patch + 1))
            VERSION="${major}.${minor}.${new_patch}-rc.1"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  # Main build and process job - now using actions directly
  build-and-process:
    name: Build and Process Rootfs
    needs: gather-resources
    runs-on: ubuntu-latest
    steps:
      - name: Checkout self
        uses: actions/checkout@v4
      
      - name: Checkout buildpacks-ci
        uses: actions/checkout@v4
        with:
          repository: cloudfoundry/buildpacks-ci
          ref: master
          path: buildpacks-ci
          
      - name: Checkout cflinuxfs5
        uses: actions/checkout@v4
        with:
          repository: plamen-bardarov/cflinuxfs5
          ref: main
          path: cflinuxfs5
          token: ${{ secrets.CFLINUXFS5_TOKEN }}

      # Build rootfs
      - name: Make rootfs
        uses: ./.github/actions/make-rootfs
        with:
          stack: cflinuxfs5
          version: ${{ needs.gather-resources.outputs.version }}
          privileged: true

      # Generate receipt diff
      - name: Generate receipt diff
        uses: ./.github/actions/generate-receipt-diff
        with:
          stack: cflinuxfs5
          version: ${{ needs.gather-resources.outputs.version }}
          previous-version: ${{ needs.gather-resources.outputs.previous-version }}

      # Upload to S3 (both stack and receipt)
      - name: Upload stack to S3
        uses: ./.github/actions/upload-s3
        with:
          upload-type: stack-s3
          version: ${{ needs.gather-resources.outputs.version }}

      - name: Upload receipt to S3
        uses: ./.github/actions/upload-s3
        with:
          upload-type: receipt-s3
          version: ${{ needs.gather-resources.outputs.version }}

      # Update repositories
     # - name: Update repositories
     #   uses: ./.github/actions/update-repos
     #   with:
     #     version: ${{ needs.gather-resources.outputs.version }}

      # Upload build artifacts to GitHub
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rootfs-build-${{ needs.gather-resources.outputs.version }}
          path: |
            rootfs-artifacts/
            receipt-artifacts/
            public-robots-artifacts/
          retention-days: 30
